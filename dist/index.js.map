{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/addStamps.ts", "../src/utils/splideImagesOrder.ts", "../src/utils/htmlTable.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export function addStamps() {\n    const stampItems = document.querySelectorAll(\"[stamp='item']\");\n    const cards = document.querySelectorAll(\"[stamp='card']\");\n    let productsArray = [];\n  \n    for (let i = 0; i < stampItems.length; i++) {\n      const type = stampItems[i].querySelector(\"[stamp='type']\")?.textContent;\n      const image = stampItems[i].querySelector(\"[stamp='image']\");\n      const products = stampItems[i].querySelectorAll(\"[stamp='product']\");\n      const cardProductName = document.querySelector(\"[stamp='name']\")?.textContent;\n  \n      productsArray = Array.from(products).map((x) => x.textContent);\n  \n      for (let c = 0; c < cards.length; c++) {\n        productsArray.some((el) => {\n          if (cardProductName?.includes(el)) {\n            if (type?.includes('Suosittelee')) {\n              cards[c].append(image?.cloneNode(true));\n              cards[c].setAttribute('fs-cmssort-field', 'ajankohtaiset');\n            } else if (type?.includes('Uutuus')) {\n              image?.classList.add('uutuus');\n              cards[c].append(image?.cloneNode(true));\n              cards[c].setAttribute('fs-cmssort-field', 'ajankohtaiset');\n            }\n          }\n        }); // products.some()\n      } // cards for\n    } // stampItems for\n    const stampList = document.querySelector(\"[stamp='list-wrp']\");\n    stampList?.remove();\n  } // export\n  ", "export function splideImagesOrder() {\n    /* ORDER OF SPLIDE IMAGES */\n    const mainImage = document.querySelector(\"[gallery='main-image']\");\n    const list = document.querySelector(\"[gallery='list']\");\n    const infoCard = document.querySelector(\"[gallery='info-card']\");\n    const listWrp = document.querySelector(\"[gallery='list-wrp']\");\n    const galleryDesktop = document.querySelector(\"[gallery='desktop']\");\n    let infoCardPosition;\n  \n    // If infocard has position set in it's attribute, convert to number\n    if (infoCard.getAttribute('gallery-location')) {\n      infoCardPosition = Number(infoCard.getAttribute('gallery-location')) - 1;\n    }\n  \n    if (list.childElementCount === 0) {\n      //remove multi-gallery from dom\n      listWrp.remove();\n      // If there's no value set for infocard location, swap infocard and main image position so main image is always on right\n      if (!infoCard.getAttribute('gallery-location')) {\n        infoCard.insertAdjacentElement('afterend', mainImage);\n      } else {\n        // If infocard has value in gallery-location attribute, change position according to it\n        list.insertBefore(infoCard, list.children[infoCardPosition]);\n      }\n    } else if (list.childElementCount === 1) {\n      // If the 1 is invisible\n      if (list?.querySelectorAll('invisible')) {\n        listWrp.remove();\n      }\n      // If there's only 1 image in multigallery\n      if (!infoCard.getAttribute('gallery-location')) {\n        // main image second\n        galleryDesktop.insertBefore(mainImage, list.children[1]);\n      } else {\n        list.insertBefore(infoCard, list.children[infoCardPosition]);\n      }\n    } else if (list.childElementCount > 1) {\n      // If there's more than 1 image in multigallery, main image second\n      list.insertBefore(mainImage, list.children[1]);\n      if (!infoCard.getAttribute('gallery-location')) {\n        // and infocard fourth\n        list.insertBefore(infoCard, list.children[3]);\n      } else {\n        list.insertBefore(infoCard, list.children[infoCardPosition]);\n        list.insertBefore(mainImage, list.children[1]);\n      }\n    }\n  } // export function\n  ", "export function htmlTable() {\n  /* GENERATE HTML TABLE */\n  const content = document.querySelector(\"[html-table='content']\");\n  if (content.textContent) {\n    const headers = content.querySelector('strong').textContent;\n    const container = document.querySelector(\"[html-table='container\");\n\n    /* CREATE TABLE */\n    const tbl = document.createElement('table');\n    tbl.classList.add('table');\n    container?.appendChild(tbl);\n    const tblHead = tbl.createTHead();\n    tblHead.classList.add('table_thead');\n    const tblBody = tbl.createTBody();\n\n    /* HEADERS */\n    const headersArray = Array.from(headers.split('|'));\n    const head = tblHead.insertRow(0);\n    const first = headersArray[0];\n    head.insertCell(0).innerHTML = first;\n\n    const middle = headersArray.slice(1, -1);\n    for (let i = 0; i < middle.length; i++) {\n      const cell = head.insertCell();\n      cell.innerHTML = middle[i];\n      cell.style.paddingLeft = '.25rem';\n      cell.style.paddingRight = '.25rem';\n      cell.style.textAlign = 'center';\n    }\n\n    const last = headersArray.slice(-1);\n    const cell = head.insertCell(-1);\n    cell.innerHTML = last;\n    cell.style.textAlign = 'right';\n    cell.style.paddingRight = '1rem';\n    /* END OF HEADERS */\n\n    const amountOfColumns = tblHead.querySelectorAll('td').length;\n\n    /* INGREDIENTS */\n    // For some reason this line doesn't work in Firefox but does in Chrome:\n    //const filterLines = content.querySelectorAll('p:not(:has(strong))');\n    const lines = [];\n    // Get all the paragraphs that are not bolded\n    const filterLines = content.querySelectorAll('p');\n    for (let i = 0; i < filterLines.length; i++) {\n      if (!filterLines[i].innerHTML.includes('<strong>')) {\n        lines.push(filterLines[i]);\n      }\n    }\n\n    const linesArray = [];\n\n    for (let i = 0; i < lines.length; i++) {\n      const row = tblBody.insertRow();\n      const line = lines[i].textContent;\n\n      // if starts with * symbol, it's a footnote\n      if (line[0] === '*') {\n        linesArray.push(lines[i]);\n      } else {\n        // For all the actual ingredients\n        const ingrArray = Array.from(line.split('|'));\n\n        const first = ingrArray[0];\n        const firstRow = row.insertCell(0);\n        firstRow.innerHTML = first;\n        firstRow.style.paddingRight = '.25rem';\n\n        const others = ingrArray.slice(1);\n        for (let i = 0; i < others.length; i++) {\n          const otherRows = row.insertCell();\n          otherRows.innerHTML = others[i];\n          otherRows.style.paddingLeft = '.25rem';\n          otherRows.style.paddingRight = '.25rem';\n\n          if (amountOfColumns === 2) {\n            // If there's only 2 columns, make last column align right\n            otherRows.style.textAlign = 'right';\n            otherRows.style.paddingRight = '1rem';\n          } else if (others[i].includes('%')) {\n            otherRows.style.textAlign = 'right';\n            otherRows.style.paddingRight = '1rem';\n          } else {\n            /* If there's more than 2 columns,\n            make all the other columns align center\n            and only last column right*/\n            otherRows.style.textAlign = 'center';\n          }\n        }\n      }\n      // If contains \"-\", remove symbol and add padding to that cell\n      const tds = document.querySelectorAll('td');\n      for (let i = 0; i < tds.length; i++) {\n        const tdsText = tds[i].textContent;\n        if (tdsText[0] === '-') {\n          //tds[i].textContent = tds[i].textContent.replace('-', '');\n          tds[i].classList.add('padThisCell');\n        }\n      } // for tds\n\n      // If contains <em>, add italics back\n      if (lines[i].innerHTML.includes('<em>')) {\n        const italics = lines[i].querySelector('em').textContent;\n        const toBeItalics = tblBody.querySelectorAll('td');\n        for (let i = 0; i < toBeItalics.length; i++) {\n          const it = toBeItalics[i].innerHTML;\n          if (it.includes(italics)) {\n            toBeItalics[i].innerHTML = toBeItalics[i].innerHTML.replace(\n              italics,\n              `<em>${italics}</em>`\n            );\n          }\n        } // for toBeItalics\n      }\n\n      // Hide original content\n      content.style.display = 'none';\n    }\n\n    /* FOOTNOTES */\n    // if there are any footnotes\n    if (linesArray.length > 0) {\n      for (let i = 0; i < linesArray.length; i++) {\n        const line = linesArray[i].textContent;\n        const row = tblBody.insertRow();\n\n        if (line[1] === '%') {\n          // Lines with % symbol, e.g. % vuorokautisen saanniin...\n          const cell = row.insertCell(0);\n          cell.innerHTML = line;\n          cell.colSpan = 100;\n        } else {\n          // All the other lines, always remove the first * symbol\n          const starRemoved = line.slice(1);\n          const cell = row.insertCell(0);\n          cell.innerHTML = starRemoved;\n          cell.colSpan = 100;\n        }\n      } // for linesArray\n      // Add class to the first footnote\n      const firstLine = linesArray[0].textContent.slice(1);\n      const trs = tblBody.querySelectorAll('tr');\n      for (let i = 0; i < trs.length; i++) {\n        if (trs[i].innerHTML.includes(firstLine)) {\n          trs[i].classList.add('table_first-footnote');\n        }\n      }\n    }\n  }\n} // export\n", "import { addStamps } from '$utils/addStamps';\nimport { splideImagesOrder } from '$utils/splideImagesOrder';\nimport { htmlTable } from '$utils/htmlTable';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  //console.log('hello');\n  //document.addEventListener('DOMContentLoaded', function () {\n  addStamps();\n  splideImagesOrder();\n  htmlTable();\n  //});\n});\n"],
  "mappings": "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",
  "names": ["cell", "first", "i"]
}
